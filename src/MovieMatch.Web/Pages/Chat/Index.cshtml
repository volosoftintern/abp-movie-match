@page
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.SignalR
@using Volo.Abp.Users
@model MovieMatch.Web.Pages.Chat.IndexModel
@inject ICurrentUser CurrentUser
@section styles {
    <abp-style src="/Pages/Chat/Chat.css" />
}
    @section scripts {
    <abp-script type="typeof(SignalRBrowserScriptContributor)" />
    <abp-script src="/Pages/Chat/Chat.js" />
}
    @{
    List<string> x=new List<string>();
}
        <div>
            <abp-row>
              <abp-column size-md="_3">
              <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
              @foreach (var item in Model.MyModel.Following.Items )
              {
                    x.AddIfNotContains(item.Name);
              <button class="nav-link" id="v-pills-@item.Name-tab" data-content="@item.Name" data-bs-toggle="pill" data-bs-target="#v-pills-@item.Name" type="button" role="tab" aria-controls="v-pills-settings" aria-selected="false">@item.Name</button>
              }
                @foreach (var item in Model.MyModel.Messages.Where(x => x.TargetUserName == CurrentUser.UserName))
                {
                   if(!x.Contains(item.UserName))
                    {
                     <button class="nav-link" id="v-pills-@item.UserName-tab" data-content="@item.UserName" data-bs-toggle="pill" data-bs-target="#v-pills-@item.UserName" type="button" role="tab" aria-controls="v-pills-settings" aria-selected="false">@item.UserName</button>
                    }
                    x.AddIfNotContains(item.UserName);
                    
                }
              </div>
            </abp-column>
                
            <abp-column size-md="_9">
                <div class="tab-content" id="v-pills-tabContent">
                
                @foreach (var item in @Model.MyModel.Following.Items)
                    {
                   
                        <div class="col-md-12">
                         <div class="tab-pane fade" id="v-pills-@item.Name" role="tabpanel" aria-labelledby="v-pills-@item.Name-tab" tabindex="0">


                            <ul class="position-relative messageList" id="MessageList_@item.Name" style="">
                                    @foreach (var message in Model.MyModel.Messages.Where(x=>(x.TargetUserName==item.Name && x.UserName==CurrentUser.UserName)||(x.TargetUserName==CurrentUser.UserName && x.UserName==item.Name)).OrderBy(m=>m.When))
                                    {
                                        string containerClass, timePosition, textAlign, contcolor, offset;
                                        if (CurrentUser.UserName == message.UserName)
                                        {
                                            containerClass = "container darker";
                                            timePosition = "time-right text-light";
                                            textAlign = "text-right text-white";
                                            contcolor = "bg-primary";
                                            offset = "col-md-6 offset-md-6";
                                        }
                                        else
                                        {
                                            containerClass = "container";
                                            timePosition = "time-left";
                                            textAlign = "text-left";
                                            contcolor = "bg-light";
                                            offset = "";
                                        }

                                        <div class="row">
                                            <div class="@offset">
                                                <div class="@containerClass @contcolor">

                                                    <p class="sender @textAlign">@message.UserName</p>
                                                    <p class="@textAlign">@message.Text</p>
                                                    <span class="@timePosition">@message.When.ToString("M/dd/yyyy hh:MM tt")</span>
                                                </div>
                                            </div>
                                        </div>

                                    
                                    }
                             </ul>
                            
                         </div>
                        
                        </div>
                   
                    }
                @foreach (var item in Model.MyModel.Messages.Where(x => x.TargetUserName == CurrentUser.UserName) )
                {

                    <div class="col-md-12">
                        <div class="tab-pane fade" id="v-pills-@item.UserName" role="tabpanel" aria-labelledby="v-pills-@item.UserName-tab" tabindex="0">


                            <ul class="position-relative messageList" id="MessageList_@item.UserName" style="">
                                @foreach (var message in Model.MyModel.Messages.Where(x => (x.TargetUserName == item.UserName && x.UserName == CurrentUser.UserName) || (x.TargetUserName == CurrentUser.UserName && x.UserName == item.UserName)).OrderBy(m => m.When))
                                {
                                    string containerClass, timePosition, textAlign, contcolor, offset;
                                    if (CurrentUser.UserName == message.UserName)
                                    {
                                        containerClass = "container darker";
                                        timePosition = "time-right text-light";
                                        textAlign = "text-right text-white";
                                        contcolor = "bg-primary";
                                        offset = "col-md-6 offset-md-6";
                                    }
                                    else
                                    {
                                        containerClass = "container";
                                        timePosition = "time-left";
                                        textAlign = "text-left";
                                        contcolor = "bg-light";
                                        offset = "";
                                    }

                                    <div class="row">
                                        <div class="@offset">
                                            <div class="@containerClass @contcolor">

                                                <p class="sender @textAlign">@message.UserName</p>
                                                <p class="@textAlign">@message.Text</p>
                                                <span class="@timePosition">@message.When.ToString("M/dd/yyyy hh:MM tt")</span>
                                            </div>
                                        </div>
                                    </div>


                                }
                            </ul>

                        </div>

                    </div>

                }
                <form method="post" id="messageForm" style="display:none">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <input name="Text" class="form-control" id="messageText" />
                    </div>
                    <div class="form-group">
                        <button id="submitButton" type="button" class="btn btn-outline-primary">SEND</button>
                    </div>
                </form>
                        </div>
            </abp-column>
        </abp-row>


   

       </div>
