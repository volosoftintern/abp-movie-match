@page
@using MovieMatch.Movies
@using MovieMatch.Web.Components.Commenting
@using Volo.Abp.Users
@using MovieMatch.Web.Components.Rating
@inject ICurrentUser CurrentUser
@model MovieMatch.Web.Pages.Movies.DetailModel

@section styles{
    <abp-style src="/Pages/Movies/Detail.css"/>
}
@section scripts{
 
    <abp-script src="/Pages/Movies/Detail.js" />
}

<div class="card mb-3">
  <div class="row g-0" style="min-height: 411px;">
    <div class="col-md-4 d-flex flex-column justify-content-between">

      <img style="display:{@string.IsNullOrEmpty(Model.MovieDetail.PosterPath)?'none':'block'}" src="https://image.tmdb.org/t/p/original/@Model.MovieDetail.PosterPath" class="img-fluid rounded-start" alt="@Model.MovieDetail.Title">
       @await Component.InvokeAsync(typeof(RatingViewComponent), new
        {
        entityType = "Movie",
        entityId = Model.MovieId.ToString(),
        })


        @if (!string.IsNullOrEmpty(Model.MovieDetail.PosterPath))
        {
            <img src="https://image.tmdb.org/t/p/original/@Model.MovieDetail.PosterPath" class="img-fluid rounded-start" alt="@Model.MovieDetail.Title"/>          
        }

      <div class="d-flex justify-content-around actions">
          <button type="button" class="btn btn-primary btn-sm" onclick="addWatchLater(@Model.MovieId,'@CurrentUser.Id')">Watch Later</button>
          <button type="button" class="btn btn-primary btn-sm" onclick="addWatchedBefore(@Model.MovieId,'@CurrentUser.Id')">Watched Before</button>
      </div>

    </div>
    <div class="col-md-8">
      <div class="card-body position-relative">
        <h5 class="card-title">@Model.MovieDetail.Title</h5>
        <p class="card-text">@Model.MovieDetail.Overview</p>
        <p class="card-text">Director: <a href="/Movies/Director/@Model.MovieDetail.Director.PersonId"><span class="badge bg-success"> @Model.MovieDetail.Director.Name</span></a></p>
        <p class="card-text">Stars:
            @foreach (var item in Model.MovieDetail.Stars)
            {
                <span class="badge bg-primary">@item.Name</span>
            }
         </p>
         <p class="card-text">Genres:
            @foreach (var item in Model.MovieDetail.Genres)
            {
                <span class="badge bg-secondary">@item.Name</span>
            }
         </p>         
        <p class="card-text position-absolute mb-3" style="position: relative;top: 372px;left: -56px;">
            <i class="fa fa-star text-warning" aria-hidden="true"></i><small class="text-muted">@Model.MovieDetail.VoteAverage.ToString("0.#")-IMDB</small>
        </p>
              <div class="d-flex justify-content-around actions" style="top: 89px;position: relative;width: 414px;left: 13px;">
          @if(@Model.Movie.IsActiveWatchLater){
          <button type="button" id="idWatchLater"  data-id="@Model.MovieId" data-content="@Model.Movie.IsActiveWatchLater" style="font-size:13px" class="btn btn-danger">Remove from watch later list</button>
          }
          else{
            <button type="button" id="idWatchLater" data-id="@Model.MovieId" data-content="@Model.Movie.IsActiveWatchLater" class="btn btn-primary">Add to watch later list</button>
          }
          @if(@Model.Movie.IsActiveWatchedBefore){
          <button type="button" id="idWatchedBefore" data-id="@Model.MovieId" data-content="@Model.Movie.IsActiveWatchedBefore" style="font-size:13px" class="btn btn-danger">Remove from watched before list</button>
          }
          else{
            <button type="button" id="idWatchedBefore" data-id="@Model.MovieId" data-content="@Model.Movie.IsActiveWatchedBefore" class="btn btn-secondary">Add to watched before list</button>
          }
      </div>
      </div>
    </div>
  </div>
</div>

  

<nav>
  <div class="nav nav-tabs" id="nav-tab" role="tablist" style="width:310px">
    <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Comments</button>
    <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false" onclick="watchersList(@Model.MovieId)">Watcher Profiles</button>
  </div>
</nav>

<div class="tab-content" id="nav-tabContent" style="width:310px">
    <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
        @await Component.InvokeAsync(typeof(CommentingViewComponent),
        new {
        entityType = "Movie",
        entityId = Model.MovieId.ToString(),
        })
       
    </div>

    <div class="nav-tabe fade" type="button" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                 
    </div>    
</div>

 
    