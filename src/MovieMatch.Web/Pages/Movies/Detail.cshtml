@page
@using MovieMatch.Movies
@using MovieMatch.Web.Components.Commenting
@using Volo.Abp.Users
@using MovieMatch.Web.Components.Rating
@inject ICurrentUser CurrentUser
@model MovieMatch.Web.Pages.Movies.DetailModel

@section styles{
    <abp-style src="/Pages/Movies/Detail.css"/>
}
@section scripts{
 
    <abp-script src="/Pages/Movies/Detail.js" />
}
        <div class="card mb-3">
                <div class="row g-0">
                    <div class="col-md-4 d-flex flex-column justify-content-between">

                        <img style="display:{@string.IsNullOrEmpty(Model.MovieDetail.PosterPath)?'none':'block'}" src="https://image.tmdb.org/t/p/original/@Model.MovieDetail.PosterPath" class="img-fluid rounded-start" alt="@Model.MovieDetail.Title">
                        <div class="row h-auto">
                            <div class="col-10 px-3">
                                @await Component.InvokeAsync(typeof(RatingViewComponent), new
                            {
                            entityType = "Movie",
                            entityId = Model.MovieId.ToString(),
                            })
                            </div>
                            <div class="col-1">
                                <p class="card-text position-absolute mb-3">
                                    <i class="fa fa-star text-warning" aria-hidden="true"></i><small class="text-muted">@Model.MovieDetail.VoteAverage.ToString("0.#")-IMDB</small>
                                </p>
                            </div>
                        </div>


                    </div>
                    <div class="col-md-8">
                        <div class="card-body position-relative">
                            <h5 class="card-title">@Model.MovieDetail.Title</h5>
                            <p class="card-text">@Model.MovieDetail.Overview</p>
                            <p class="card-text">Director: <a href="/Movies/Director/@Model.MovieDetail.Director.Id"><span class="badge bg-success"> @Model.MovieDetail.Director.Name</span></a></p>
                            <p class="card-text">
                                Stars:
                            @foreach (var item in Model.MovieDetail.Stars)
                            {
                                <a href="/Movies/Actor/@item.Id"><span class="badge bg-primary">@item.Name</span></a>
                            }
                        </p>
                        <p class="card-text">
                            Genres:
                            @foreach (var item in Model.MovieDetail.Genres)
                            {
                                <span class="badge bg-secondary">@item.Name</span>
                            }
                        </p>

                        <p class="d-flex justify-content-around">
                            @if (@Model.MovieDetail.IsActiveWatchLater)
                            {
                                <button type="button" id="idWatchLater" data-id="@Model.MovieId" data-content="@Model.MovieDetail.IsActiveWatchLater" class="btn btn-danger btn-sm">Remove from watch later list</button>
                            }
                            else
                            {
                                <button type="button" id="idWatchLater" data-id="@Model.MovieId" data-content="@Model.MovieDetail.IsActiveWatchLater" class="btn btn-primary ">Add to watch later list</button>
                            }
                            @if (@Model.MovieDetail.IsActiveWatchedBefore)
                            {
                                <button type="button" id="idWatchedBefore" data-id="@Model.MovieId" data-content="@Model.MovieDetail.IsActiveWatchedBefore" class="btn btn-danger btn-sm">Remove from watched before list</button>
                            }
                            else
                            {
                                <button type="button" id="idWatchedBefore" data-id="@Model.MovieId" data-content="@Model.MovieDetail.IsActiveWatchedBefore" class="btn btn-secondary">Add to watched before list</button>
                            }
                        </p>
                    </div>
                </div>
            </div>
            <div class="row g-0">
                <nav>
                    <div class="nav nav-tabs" id="nav-tab" role="tablist">
                        <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Comments</button>
                        <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false" onclick="watchersList(@Model.MovieId)">Watcher Profiles</button>
                    </div>
                </nav>

                <div class="tab-content" id="nav-tabContent">
                    <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
                        @await Component.InvokeAsync(typeof(CommentingViewComponent),
                        new {
                        entityType = "Movie",
                        entityId = Model.MovieId.ToString(),
                        currPage=1
                        })

                    </div>

                    <div class="nav-tabe fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                    </div>
                </div>
            </div>


    </div>

<h3>Similar Movies (@Model.SimilarMovies.Count)</h3>
<div class="swiper movie-carousel">
    <!-- Additional required wrapper -->
    <div class="swiper-wrapper">
        <!-- Slides -->
        @foreach (var item in Model.SimilarMovies)
        {
            
            <div class="swiper-slide">
                <a href="/Movies/@item.Id">
                    <img alt="@item.Title" src="https://image.tmdb.org/t/p/original/@item.PosterPath" />
                </a>
        </div>
        }

    </div>
    <!-- If we need pagination -->
    <div class="swiper-pagination"></div>

    <!-- If we need navigation buttons -->
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
</div>
   
   

  



 
    